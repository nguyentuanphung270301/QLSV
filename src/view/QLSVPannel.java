/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import Data.DataMessageDialog;
import Data.DataSQL;
import Data.DataValidator;
import Data.ImageData;
import Data.MailValidator;
import Data.PhoneValidator;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.sql.rowset.serial.SerialBlob;
import java.sql.*;
import java.sql.Blob;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;

import model.Student;

/**
 *
 * @author USER
 */
public class QLSVPannel extends javax.swing.JPanel {
private byte[] personalImage;
    private MainForm parentForm;
    private boolean MailValidator;
    public QLSVPannel() {
        initComponents();
        this.ViewSV();
        this.initComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_gioiTinh = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_SDT = new javax.swing.JTextField();
        jTextField_maSV = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_email = new javax.swing.JTextField();
        jRadioButton_Nam = new javax.swing.JRadioButton();
        jRadioButton_Nu = new javax.swing.JRadioButton();
        jTextField_hoTen = new javax.swing.JTextField();
        jButton_nhapMoi = new javax.swing.JButton();
        jButton_Luu = new javax.swing.JButton();
        jButton_capNhat = new javax.swing.JButton();
        jButton_Xoa = new javax.swing.JButton();
        jButton_timKiem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_SV = new javax.swing.JTable();
        jComboBox_queQuan = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jButton_hinhAnh = new javax.swing.JButton();
        jLabel_hinhAnh = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(750, 730));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 1080, 10));

        jLabel2.setText("Quê Quán");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        jLabel3.setText("Mã SV");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 50, -1));

        jLabel4.setText("Họ tên");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jLabel5.setText("Email");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jLabel6.setText("Số ĐT");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, -1, -1));
        add(jTextField_SDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 160, 30));
        add(jTextField_maSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 110, 30));

        jLabel7.setText("Giới tính");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));
        add(jTextField_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 210, 30));

        buttonGroup_gioiTinh.add(jRadioButton_Nam);
        jRadioButton_Nam.setText("Nam");
        add(jRadioButton_Nam, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, -1, -1));

        buttonGroup_gioiTinh.add(jRadioButton_Nu);
        jRadioButton_Nu.setText("Nữ");
        jRadioButton_Nu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_NuActionPerformed(evt);
            }
        });
        add(jRadioButton_Nu, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, -1, -1));
        add(jTextField_hoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 440, 30));

        jButton_nhapMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/write.png"))); // NOI18N
        jButton_nhapMoi.setText("Nhập mới");
        jButton_nhapMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nhapMoiActionPerformed(evt);
            }
        });
        add(jButton_nhapMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 210, 120, -1));

        jButton_Luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/diskette (1).png"))); // NOI18N
        jButton_Luu.setText("Lưu");
        jButton_Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LuuActionPerformed(evt);
            }
        });
        add(jButton_Luu, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 250, 120, -1));

        jButton_capNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-update-24.png"))); // NOI18N
        jButton_capNhat.setText("Cập nhật");
        jButton_capNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_capNhatActionPerformed(evt);
            }
        });
        add(jButton_capNhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 290, 120, -1));

        jButton_Xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-delete-24.png"))); // NOI18N
        jButton_Xoa.setText("Xóa");
        jButton_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XoaActionPerformed(evt);
            }
        });
        add(jButton_Xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 330, 120, -1));

        jButton_timKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search1.png"))); // NOI18N
        jButton_timKiem.setText("Tìm kiếm");
        jButton_timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_timKiemActionPerformed(evt);
            }
        });
        add(jButton_timKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 170, 120, -1));

        jTable_SV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable_SV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Họ tên", "Email", "SDT", "Giới tính", "Quê Quán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_SV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_SV);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 1060, 180));

        jComboBox_queQuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBox_queQuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_queQuanActionPerformed(evt);
            }
        });
        add(jComboBox_queQuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 150, 30));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1080, 10));

        jButton_hinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-open-folder-24.png"))); // NOI18N
        jButton_hinhAnh.setText("Mở hình");
        jButton_hinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_hinhAnhActionPerformed(evt);
            }
        });
        add(jButton_hinhAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 330, 110, 30));

        jLabel_hinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-jpg-100.png"))); // NOI18N
        add(jLabel_hinhAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 170, 120, 160));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/id-card (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 150));

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("QUẢN LÍ SINH VIÊN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 910, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel8)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 910, 150));

        jPanel3.setBackground(new java.awt.Color(0, 51, 153));
        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 1080, 200));
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton_NuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_NuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_NuActionPerformed

    private void jButton_nhapMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nhapMoiActionPerformed

        this.jTextField_maSV.setText("");
        this.jTextField_hoTen.setText("");
        this.jTextField_email.setText("");
        this.jTextField_SDT.setText("");
        this.jComboBox_queQuan.setSelectedIndex(-1);
        this.buttonGroup_gioiTinh.clearSelection();
        personalImage = null;
        ImageIcon icon = new ImageIcon(getClass().getResource("/icon/Image-JPEG-icon.png"));
        jLabel_hinhAnh.setIcon(icon);
    }//GEN-LAST:event_jButton_nhapMoiActionPerformed

    private void jButton_LuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LuuActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(jTextField_maSV, sb, "Vui lòng điền mã số sinh viên");
        DataValidator.validateEmpty(jTextField_hoTen, sb, "Vui lòng điền họ tên sinh viên");
        DataValidator.validateEmpty(jTextField_email, sb, "Vui lòng điền Email cá nhân");
        DataValidator.validateEmpty(buttonGroup_gioiTinh, sb, "Vui lòng chọn giới tính");
        MailValidator mailvalidator = new MailValidator();
        PhoneValidator phonevalidator = new PhoneValidator();
        if(sb.length()>0){
            DataMessageDialog.showErrorDialog(parentForm, sb.toString(), "Lỗi");
        }
        else{
        try {  
            Student st = new Student();
            st.setMaSV(jTextField_maSV.getText().toUpperCase());
            st.setHoTen(jTextField_hoTen.getText());
            st.setEmail(jTextField_email.getText());
            st.setSoDT(jTextField_SDT.getText());
            st.setGioiTinh(jRadioButton_Nam.isSelected() ? "Nam" : "Nữ" );
            st.setQueQuan(jComboBox_queQuan.getSelectedItem()+"");
            st.setHinh(personalImage);
            if(!(mailvalidator.validate(st.getEmail()))){
                DataMessageDialog.showErrorDialog(parentForm, "Sai định dạng Email", "Cảnh báo");
            }
            else if(phonevalidator.checkPhone(st.getSoDT()) == false){
                DataMessageDialog.showErrorDialog(parentForm, "Sai định dạng số điện thoại", "Cảnh báo");
            }
            else if(insertSV(st)){
                DataMessageDialog.showMessageDialog(parentForm, "Lưu sinh viên thành công", "Thông báo");
                ViewSV();
            }
            else{
                DataMessageDialog.showMessageDialog(parentForm, "Lưu sinh viên thất bại", "Cảnh báo");
            }
        } catch (Exception e) {
            DataMessageDialog.showErrorDialog(parentForm, e.getMessage(),"Lỗi");
        }
     }
    }//GEN-LAST:event_jButton_LuuActionPerformed

    private void jButton_capNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_capNhatActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(jTextField_maSV, sb, "Vui lòng điền mã số sinh viên");
        DataValidator.validateEmpty(jTextField_hoTen, sb, "Vui lòng điền họ tên sinh viên");
        DataValidator.validateEmpty(jTextField_email, sb, "Vui lòng điền Email cá nhân");
        DataValidator.validateEmpty(buttonGroup_gioiTinh, sb, "Vui lòng chọn giới tính");
        MailValidator mailvalidator = new MailValidator();
        PhoneValidator phonevalidator = new PhoneValidator();
        if(sb.length()>0){
            DataMessageDialog.showErrorDialog(parentForm, sb.toString(), "Lỗi");
        }
        else{
            if(DataMessageDialog.showConfirmDialog(parentForm, "Bạn có muốn cập nhật sinh viên không", "Xác nhận")==JOptionPane.NO_OPTION){
                return;
            }
        try {  
            Student st = new Student();
            st.setMaSV(jTextField_maSV.getText().toUpperCase());
            
            st.setHoTen(jTextField_hoTen.getText());
            st.setEmail(jTextField_email.getText());
            st.setSoDT(jTextField_SDT.getText());
            st.setGioiTinh(jRadioButton_Nam.isSelected() ? "Nam" : "Nữ" );
            st.setQueQuan(jComboBox_queQuan.getSelectedItem()+"");
            st.setHinh(personalImage);
            if(!(mailvalidator.validate(st.getEmail()))){
                DataMessageDialog.showErrorDialog(parentForm, "Sai định dạng Email", "Cảnh báo");
            }
            else if(phonevalidator.checkPhone(st.getSoDT()) == false){
                DataMessageDialog.showErrorDialog(parentForm, "Sai định dạng số điện thoại", "Cảnh báo");
            }
            else if(updateSV(st)){
                DataMessageDialog.showMessageDialog(parentForm, "Cập nhật sinh viên thành công", "Thông báo");
                ViewSV();
            }
            else{
                DataMessageDialog.showMessageDialog(parentForm, "Cập nhật sinh viên thất bại", "Cảnh báo");
            }
        } catch (Exception e) {
            DataMessageDialog.showErrorDialog(parentForm, e.getMessage(),"Lỗi");
        }
     }

        
    }//GEN-LAST:event_jButton_capNhatActionPerformed

    private void jButton_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaActionPerformed
        String maSV = jTextField_maSV.getText();
        int check;
        int ktmaSV = 0;
        if(maSV.equals("")){
            ktmaSV = 1;
            JOptionPane.showMessageDialog(this,"Hãy nhập mã sinh vien bạn muốn xóa");
        }
        else if(ktmaSV != 1){
            check = checkSV(maSV);
            if(check == 1){
                int res = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa ?", "Xác nhận", 0);
                if(res == JOptionPane.CANCEL_OPTION)
                return;
                else if(res == JOptionPane.OK_OPTION){
                    DataMessageDialog.showMessageDialog(parentForm, "Xoá sinh viên thành công", "Thông báo");
                    deleteSV(maSV);
                    this.ViewSV();
                }
            }
        }
    }//GEN-LAST:event_jButton_XoaActionPerformed

    private void jButton_timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_timKiemActionPerformed
        String maSV = jTextField_maSV.getText();
        if(maSV.equals("")){
            DataMessageDialog.showMessageDialog(parentForm, "Nhập mã sô sinh viên cần tìm", "Thông báo");
            return;
        }
        try {
            Student temp = findByID(maSV);
            if(temp != null){
                jTextField_hoTen.setText(temp.getHoTen());
                jTextField_email.setText(temp.getEmail());
                jTextField_SDT.setText(temp.getSoDT());
                jRadioButton_Nam.setSelected(temp.getGioiTinh().equals("Nam"));
                jRadioButton_Nu.setSelected(temp.getGioiTinh().equals("Nữ"));
                jComboBox_queQuan.setSelectedItem(temp.getQueQuan());
            }
            else{
                DataMessageDialog.showMessageDialog(parentForm, "Không tìm thấy sinh viên", "Thông báo");
            }
        } catch (Exception e) {
            DataMessageDialog.showErrorDialog(parentForm, e.getMessage() , "Cảnh báo");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton_timKiemActionPerformed

    private void jComboBox_queQuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_queQuanActionPerformed

    }//GEN-LAST:event_jComboBox_queQuanActionPerformed

    private void jTable_SVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SVMouseClicked
        try {
            int row = jTable_SV.getSelectedRow();
            if(row >= 0){
                String id = (String) jTable_SV.getValueAt(row, 0);
                Student st = findByID(id);
                if(st != null ){
                jTextField_maSV.setText(st.getMaSV());
                jTextField_hoTen.setText(st.getHoTen());
                jTextField_email.setText(st.getEmail());
                jTextField_SDT.setText(st.getSoDT());
                jRadioButton_Nam.setSelected(st.getGioiTinh().equals("Nam"));
                jRadioButton_Nu.setSelected(st.getGioiTinh().equals("Nữ"));
                jComboBox_queQuan.setSelectedItem(st.getQueQuan());
                if(st.getHinh() != null ){
                    Image img = ImageData.createImageFromByArray(st.getHinh(), "jpg");
                    jLabel_hinhAnh.setIcon(new ImageIcon(img));
                    personalImage = st.getHinh();
                }
                else{
                    ImageIcon icon = new ImageIcon(getClass().getResource("/icon/icons8-jpg-100.png"));
                    jLabel_hinhAnh.setIcon(icon);
                }
                }
            }
        } catch (Exception e) {
            DataMessageDialog.showErrorDialog(parentForm, e.getMessage() , "Cảnh báo");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable_SVMouseClicked

    private void jButton_hinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_hinhAnhActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
               if(f.isDirectory()){
                   return true;
               }
               else{
                   return f.getName().toLowerCase().endsWith(".jpg");
               }
            }

            @Override
            public String getDescription() {
                return "Image File (*.jpg)";
            }
        });
        if(chooser.showOpenDialog(parentForm) == JOptionPane.CANCEL_OPTION){
            return ;
        }
        File file = chooser.getSelectedFile();
        try {
            ImageIcon icon = new ImageIcon(file.getPath());
            Image img = ImageData.resize(icon.getImage(), 140, 160);
            ImageIcon resizedIcon = new ImageIcon(img);
            jLabel_hinhAnh.setIcon(resizedIcon);
            personalImage = ImageData.toByteArray(img, "jpg");
        } catch (Exception e) {
            
            e.printStackTrace();
            DataMessageDialog.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_jButton_hinhAnhActionPerformed
    public void initComboBox(){
           try{
        Connection ketNoi = DataSQL.openConnection();
        String sql ="select * from QueQuan";
        PreparedStatement ps = ketNoi.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();
        jComboBox_queQuan.removeAllItems();
            while(rs.next()){
            jComboBox_queQuan.addItem(rs.getString("Tinh"));
            }
            rs.close();
            ps.close();
            ketNoi.close();
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
// xuát thông tin từ sql
    public void ViewSV(){
        DefaultTableModel model = (DefaultTableModel) jTable_SV.getModel();
        model.setNumRows(0);
        Connection ketNoi = DataSQL.openConnection();        
        String sql ="select * from SinhVien";
        Vector vt;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                vt = new Vector();
                vt.add(rs.getString("MaSV"));
                vt.add(rs.getString("HoTen"));
                vt.add(rs.getString("Email"));
                vt.add(rs.getString("SDT"));
                vt.add(rs.getString("GioiTinh"));
                vt.add(rs.getString("QueQuan"));
                model.addRow(vt);
            }
            jTable_SV.setModel(model);
            rs.close();
            ps.close();
            ketNoi.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    // thêm thông tin vào sql
    public boolean insertSV(Student st) throws Exception{
        
        String sql ="insert into SinhVien values (?,?,?,?,?,?,?)";
        try (Connection ketNoi = DataSQL.openConnection();
            PreparedStatement ps = ketNoi.prepareStatement(sql);){ 
            ps.setString(1, st.getMaSV());
            ps.setString(2, st.getHoTen());
            ps.setString(3, st.getEmail());
            ps.setString(4, st.getSoDT());
            ps.setString(5, st.getGioiTinh());
            ps.setString(6, st.getQueQuan());
            
            if(st.getHinh()!= null){
                Blob hinh = new SerialBlob(st.getHinh());
                ps.setBlob(7, hinh);
            }
            else{
                Blob hinh = null;
                ps.setBlob(7,hinh);
            }
            return ps.executeUpdate() > 0;
        } 
    }
    // kiểm tra sinh viên tồn tại hay chưa
    private int checkSV(String maSV){
        Connection ketNoi = DataSQL.openConnection();
        int tonTai = 0;
        String sql ="select * from SinhVien where MaSV ='" + maSV +"'" ;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                tonTai = 1;
            }
            rs.close();
            ps.close();
            ketNoi.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return tonTai;
    }
    // Tìm kiếm SV
    public Student findByID(String maSV){
        String sql = "select * from SinhVien where maSV = ?";      
        try {
            Connection ketNoi = DataSQL.openConnection();
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, maSV);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                Student st = new Student();
                st.setMaSV(rs.getString("MaSV"));
                st.setHoTen(rs.getString("HoTen"));
                st.setEmail(rs.getString("Email"));
                st.setSoDT(rs.getString("SDT"));
                st.setGioiTinh(rs.getString("GioiTinh"));
                st.setQueQuan(rs.getString("QueQuan"));
                Blob blob = rs.getBlob("Hinh");
                if(blob != null)
                    st.setHinh(blob.getBytes(1, (int) blob.length()));
                return st;
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    // cập nhật thông tin sinh viên
       public boolean updateSV(Student st) throws Exception{
     
        String sql =" UPDATE dbo.SinhVien SET HoTen = ?,Email =?,SDT = ?,GioiTinh = ?,QueQuan = ? ,Hinh = ? where MaSV = ?";
        try (Connection ketNoi = DataSQL.openConnection();
            PreparedStatement ps = ketNoi.prepareStatement(sql);){ 
            ps.setString(7, st.getMaSV());
            ps.setString(1, st.getHoTen());
            ps.setString(2, st.getEmail());
            ps.setString(3, st.getSoDT());
            ps.setString(4, st.getGioiTinh());
            ps.setString(5, st.getQueQuan());
            //File input = null;
            //BufferedImage read = ImageIO.read(input);
            if(st.getHinh()!= null){
                Blob hinh = new SerialBlob(st.getHinh());
                ps.setBlob(6, hinh);
            }
            else{
                Blob hinh = null;
                ps.setBlob(6,hinh);
            }
            return ps.executeUpdate() > 0;
        } 
    }
      //xóa sv
      public void deleteSV(String maSV){
        Connection ketNoi = DataSQL.openConnection();
        String sql ="delete from SinhVien where MaSV =?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1,maSV);
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_gioiTinh;
    private javax.swing.JButton jButton_Luu;
    private javax.swing.JButton jButton_Xoa;
    private javax.swing.JButton jButton_capNhat;
    private javax.swing.JButton jButton_hinhAnh;
    private javax.swing.JButton jButton_nhapMoi;
    private javax.swing.JButton jButton_timKiem;
    private javax.swing.JComboBox<String> jComboBox_queQuan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_hinhAnh;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton_Nam;
    private javax.swing.JRadioButton jRadioButton_Nu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable_SV;
    private javax.swing.JTextField jTextField_SDT;
    private javax.swing.JTextField jTextField_email;
    private javax.swing.JTextField jTextField_hoTen;
    private javax.swing.JTextField jTextField_maSV;
    // End of variables declaration//GEN-END:variables
}
